Author: David Shank

This hand in includes a mostly functional gui interface, including the map, buttons for selecting
start and end nodes, the ability to load different maps, and the ability to select nodes with the
mouse. UML diagrams are included in PRJ3_uml_files.

To select a node, click somewhere on the map and then click on one of the Select node buttons.
Currently set so you can only select nodes on roads. Selecting anywhere will select the nearest 
road node.

Implemented the Haversine Formula for finding distances over the map. This is used for finding
shortest distances from one point to a node by iterating over all the nodes. (Rather inefficient)
This will also be used for finding the lengths of GraphEdges.

There is a skeletal implementation of many of the features for finding a route, including a number
of Graph interfaces. The Director class will make use of the features in these interfaces to
generate a list of directions from one point to another.

Application is now the GPSEvent listener. This seems like probably the wrong way to do it but it
simplifies the system for getting events, updating directions, and updating the map panel.

GraphEdges and RoadEdges are currently are currently not in use, and should be considered essentially
skeleton classes despite having all their methods implemented.

(I think I may be over complicating getting directions. It might be much simpler if Director simply had
access to the MapPanel. Then it could easily get and set start and end nodes, set the route, and Director
could be the only GPSListener. I will test this during Thanksgiving.)